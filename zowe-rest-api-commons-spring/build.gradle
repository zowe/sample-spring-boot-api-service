plugins {
    id 'java-library'
    id 'maven-publish'
    id 'com.jfrog.bintray' version '1.8.5'
    id 'jacoco'
    id 'com.github.hierynomus.license' version '0.15.0'
    id 'com.adarshr.test-logger' version '2.1.0'
}

compileJava.options.encoding = "UTF-8"
compileTestJava.options.encoding = "UTF-8"

version getVersionFromGitTag()

ext {
    zoweApimlVersion = '1.13.0'
    springBootVersion = '2.3.2.RELEASE'
    sharedObjectFilePath = 'src/main/resources/lib/libzowe-commons-secur.so'
}

license {
    header rootProject.file('.licence/Apache-or-EPL-License-Header.txt')
    ext.year = Calendar.getInstance().get(Calendar.YEAR)
    excludes(["**/*.yml", "**/*.json", "**/*.sh", "**/*.txt", "**/*.p12", "**/*.xml", "**/*.jsp", "**/*.html", "**/*.jks", "**/*.so", "**/*.md"])
    mapping {
        java = 'SLASHSTAR_STYLE'
    }
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
    maven {
        url zoweArtifactoryRepository
    }
    jcenter()
}

dependencies {
    implementation "org.zowe.apiml.sdk:onboarding-enabler-java:$zoweApimlVersion"
    implementation "org.zowe.apiml.sdk:common-service-core:$zoweApimlVersion"

    implementation "org.springframework.boot:spring-boot-starter-web:$springBootVersion"
    implementation "org.springframework.boot:spring-boot-starter-security:$springBootVersion"
    implementation 'io.springfox:springfox-boot-starter:3.0.0'
    compileOnly 'org.projectlombok:lombok:1.18.12'
	annotationProcessor 'org.projectlombok:lombok:1.18.12'
    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor:$springBootVersion"
	testImplementation "org.springframework.boot:spring-boot-starter-test:$springBootVersion"
    testImplementation 'net.javacrumbs.json-unit:json-unit-fluent:2.18.1'
}

test {
    useJUnitPlatform()
}

task checkSharedObject {
    doFirst {
        def f = new File(projectDir, sharedObjectFilePath)
        if (!f.exists()) {
            throw new GradleException("Shared object $sharedObjectFilePath is missing. Run `./gradlew zosbuild` in directory $projectDir to build it yourself")
        }
    }
}

jar.dependsOn checkSharedObject

jar {
    manifest {
        attributes('Implementation-Title': project.name,
                   'Implementation-Version': project.version)
    }
}

task saveVersion() {
    doLast {
        new File(projectDir, ".version").text = "$project.version"
    }
}

task zosbuild(type: Exec) {
    inputs.dir('zossrc').withPathSensitivity(PathSensitivity.RELATIVE)
    outputs.cacheIf { true }
    outputs.file(sharedObjectFilePath)
    if (System.getProperty('os.name').toLowerCase(Locale.ROOT).contains('windows')) {
        commandLine 'zowe-api-dev.cmd', 'zosbuild'
    } else {
        commandLine 'npx', 'zowe-api-dev', 'zosbuild'
    }
}

apply from: "$projectDir/gradle/publishing.gradle"

testlogger {
    theme 'mocha'
}

jacoco {
    toolVersion = '0.8.5'
}

jacocoTestReport {
    reports {
        xml.enabled true
        html.enabled true
    }
    doLast {
        println "JaCoCo Test report from Commons Spring written to: ${jacocoTestReport.reports.html.destination}/index.html"
    }
}

jacocoTestReport.dependsOn test

check.dependsOn jacocoTestReport

compileJava.dependsOn(processResources)
