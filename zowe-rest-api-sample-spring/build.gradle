plugins {
    id 'org.springframework.boot' version '2.3.2.RELEASE'
    id 'java'
    id 'jacoco'
    id 'com.github.hierynomus.license' version '0.15.0'
    id 'org.unbroken-dome.test-sets' version '3.0.1'
    id 'com.adarshr.test-logger' version '2.1.0'
}

apply plugin: 'io.spring.dependency-management'

group = 'org.zowe.sample'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

ext {
    sharedObjectFilePath = 'src/main/resources/lib/libzowe-sample.so'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenLocal()
    maven {
        url zoweArtifactoryRepository
    }
    jcenter()
    mavenCentral()
}

testSets {
    integrationTest {
        createArtifact = true
    }
}

integrationTest {
    outputs.upToDateWhen { false }
}

def commonsProject = { ->
        try {
            return project(':zowe-rest-api-commons-spring')
        } catch (ignored) {
            // See docs/versioning.md for more details
            return "org.zowe:zowe-rest-api-commons-spring:0.0.0-SNAPSHOT"
        }
    }

dependencies {
    implementation commonsProject()
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'io.springfox:springfox-boot-starter:3.0.0'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    testImplementation 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    // RestAssured 4.3 is not compatible with AdoptOpenJSK OpenJ9
    // https://github.com/rest-assured/rest-assured/issues/1295
    testImplementation 'io.rest-assured:rest-assured:4.2.0'
    testImplementation 'io.rest-assured:json-path:4.2.0'
    testImplementation 'io.rest-assured:xml-path:4.2.0'
    testImplementation 'io.rest-assured:spring-mock-mvc:4.2.0'
    testImplementation 'org.awaitility:awaitility:4.0.3'
    integrationTestAnnotationProcessor 'org.projectlombok:lombok'
}

jacoco {
    toolVersion = '0.8.5'
}

jacocoTestReport {
    reports {
        xml.enabled true
        html.enabled true
    }
    doLast {
        println "JaCoCo Test report written to: ${jacocoTestReport.reports.html.destination}/index.html"
    }
}

jacocoTestReport.dependsOn test

check.dependsOn jacocoTestReport

license {
    header rootProject.file('.licence/Apache-or-EPL-License-Header.txt')
    ext.year = Calendar.getInstance().get(Calendar.YEAR)
    excludes(["**/*.yml", "**/*.json", "**/*.sh", "**/*.txt", "**/*.p12", "**/*.xml", "**/*.jsp", "**/*.html", "**/*.jks", "**/*.so", "**/*.md"])
    mapping {
        java = 'SLASHSTAR_STYLE'
    }
}

bootRun {
    args '--spring.config.additional-location=file:./config/local/application.yml'
}

task checkSharedObject {
    doFirst {
        def f = new File(projectDir, sharedObjectFilePath)
        if (!f.exists()) {
            throw new GradleException("Shared object $sharedObjectFilePath is missing. Run `./gradlew zosbuild` in directory $projectDir to build it yourself")
        }
    }
}

jar.dependsOn checkSharedObject

task zosbuild(type: Exec) {
    inputs.dir('zossrc').withPathSensitivity(PathSensitivity.RELATIVE)
    outputs.cacheIf { true }
    outputs.file(sharedObjectFilePath)
    if (System.getProperty('os.name').toLowerCase(Locale.ROOT).contains('windows')) {
        commandLine 'zowe-api-dev.cmd', 'zosbuild'
    } else {
        commandLine 'npx', 'zowe-api-dev', 'zosbuild'
    }
}

testlogger {
    theme 'mocha'
}

compileJava.dependsOn(processResources)

